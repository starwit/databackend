
name: Create release and tag

# Full workflow to build and publish Maven, Docker, Helm; TODO automatic version update. Everything depends on version in pom.xml

on:
  workflow_dispatch:
    inputs:
      release-type: # id of input
        description: "prerelease, patch, minor or major"
        required: true
        default: "prerelease"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: databackend
  DOCKERHUB_USERNAME: starwit
  DOCKERHUB_ORG: starwitorg
  release-type: ${{ github.event.inputs.release-type }}

jobs:
  build:
    name: "Creating changelog and release"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: generate tag and release body
      run: |
        RELEASE_TYPE=$(sh ${{ github.workspace }}/.github/workflows/getReleaseType.sh ${{ env.release-type }})
        git config user.name github-smartparkingconfig
        git config user.email code@starwit.de
        npx standard-version -i CHANGELOG.md --release-as $RELEASE_TYPE

    - name: Read CHANGELOG.md
      id: package
      uses: juliangruber/read-file-action@v1
      with:
        path: ./CHANGELOG.md
    - name: Echo CHANGELOG.md
      run: echo '${{ steps.package.outputs.content }}'

    # - name: publish tag
    #   id: publish_tag
    #   run: |
    #     git push --follow-tags
    #     echo ::set-output name=tag_name::$(git describe HEAD --abbrev=0)

    # - name: create release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     release_name: Release ${{ steps.publish_tag.outputs.tag_name }}
    #     tag_name: ${{ steps.publish_tag.outputs.tag_name }}
    #     body_path: CHANGELOG.md

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 21

    - name: get version from pom.xml
      run: |
        echo "VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )" >> $GITHUB_ENV   
    - name: Build with Maven
      run: mvn clean -B package --file pom.xml
      env:
         CI: false

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
         context: .
         file: ./dockerfile
         push: true
         tags: ${{ env.DOCKERHUB_ORG }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}


  publish_helm:
    name: "Publish helm chart"
    runs-on: [self-hosted, linux, X64]

    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: get helm
        uses: azure/setup-helm@v3

      - name: login to Helm registry
        run: helm registry login registry-1.docker.io -u starwit -p ${{ secrets.DOCKERHUB_TOKEN }}
      - name: run helm update
        working-directory: deployment/helm/databackend
        run: helm dep update
      - name: run helm package
        working-directory: deployment/helm
        run: helm package databackend
      - name: get version number
        working-directory: deployment/helm/databackend
        run: |
          echo "HELM_VERSION=$(grep version: Chart.yaml | head -1 | awk '{print $2}')" >> $GITHUB_ENV
      - name: run helm push
        working-directory: deployment/helm
        run: helm push databackend-${{ env.HELM_VERSION }}.tgz oci://registry-1.docker.io/starwitorg